/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.com.cmx.shiroweb.chat.proto.ChatMessage', null, global);
goog.exportSymbol('proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage', null, global);
goog.exportSymbol('proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cmx.shiroweb.chat.proto.ChatMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.cmx.shiroweb.chat.proto.ChatMessage.displayName = 'proto.com.cmx.shiroweb.chat.proto.ChatMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.com.cmx.shiroweb.chat.proto.ChatMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.cmx.shiroweb.chat.proto.ChatMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    messageId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    messageContext: jspb.Message.getFieldWithDefault(msg, 2, ""),
    filemessage: (f = msg.getFilemessage()) && proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.toObject(includeInstance, f),
    filePath: jspb.Message.getFieldWithDefault(msg, 4, ""),
    messageType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    messageTimestamp: jspb.Message.getFieldWithDefault(msg, 6, 0),
    routerDispatch: (f = msg.getRouterDispatch()) && proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cmx.shiroweb.chat.proto.ChatMessage}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cmx.shiroweb.chat.proto.ChatMessage;
  return proto.com.cmx.shiroweb.chat.proto.ChatMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cmx.shiroweb.chat.proto.ChatMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cmx.shiroweb.chat.proto.ChatMessage}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessageId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessageContext(value);
      break;
    case 3:
      var value = new proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage;
      reader.readMessage(value,proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.deserializeBinaryFromReader);
      msg.setFilemessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setFilePath(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMessageType(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMessageTimestamp(value);
      break;
    case 7:
      var value = new proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch;
      reader.readMessage(value,proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.deserializeBinaryFromReader);
      msg.setRouterDispatch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.cmx.shiroweb.chat.proto.ChatMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cmx.shiroweb.chat.proto.ChatMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMessageId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMessageContext();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFilemessage();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.serializeBinaryToWriter
    );
  }
  f = message.getFilePath();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMessageType();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getMessageTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getRouterDispatch();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.displayName = 'proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.prototype.toObject = function(opt_includeInstance) {
  return proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.toObject = function(includeInstance, msg) {
  var f, obj = {
    fileName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    fileSize: jspb.Message.getFieldWithDefault(msg, 2, 0),
    fileContent: msg.getFileContent_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage;
  return proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFileName(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setFileSize(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFileContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFileName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFileSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getFileContent_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional string file_name = 1;
 * @return {string}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.prototype.getFileName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.prototype.setFileName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 file_size = 2;
 * @return {number}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.prototype.getFileSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.prototype.setFileSize = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bytes file_content = 3;
 * @return {!(string|Uint8Array)}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.prototype.getFileContent = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes file_content = 3;
 * This is a type-conversion wrapper around `getFileContent()`
 * @return {string}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.prototype.getFileContent_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFileContent()));
};


/**
 * optional bytes file_content = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFileContent()`
 * @return {!Uint8Array}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.prototype.getFileContent_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFileContent()));
};


/** @param {!(string|Uint8Array)} value */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage.prototype.setFileContent = function(value) {
  jspb.Message.setProto3BytesField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.displayName = 'proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.prototype.toObject = function(opt_includeInstance) {
  return proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.toObject = function(includeInstance, msg) {
  var f, obj = {
    fromUser: jspb.Message.getFieldWithDefault(msg, 1, ""),
    toUser: jspb.Message.getFieldWithDefault(msg, 2, ""),
    dispatchType: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch;
  return proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFromUser(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setToUser(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDispatchType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFromUser();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getToUser();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDispatchType();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * optional string from_user = 1;
 * @return {string}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.prototype.getFromUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.prototype.setFromUser = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string to_user = 2;
 * @return {string}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.prototype.getToUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.prototype.setToUser = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 dispatch_type = 3;
 * @return {number}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.prototype.getDispatchType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch.prototype.setDispatchType = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 message_id = 1;
 * @return {number}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.getMessageId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.setMessageId = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string message_context = 2;
 * @return {string}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.getMessageContext = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.setMessageContext = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional FileMessage fileMessage = 3;
 * @return {?proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.getFilemessage = function() {
  return /** @type{?proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage} */ (
    jspb.Message.getWrapperField(this, proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage, 3));
};


/** @param {?proto.com.cmx.shiroweb.chat.proto.ChatMessage.FileMessage|undefined} value */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.setFilemessage = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.clearFilemessage = function() {
  this.setFilemessage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.hasFilemessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string file_path = 4;
 * @return {string}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.getFilePath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.setFilePath = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 message_type = 5;
 * @return {number}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.getMessageType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.setMessageType = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 message_timestamp = 6;
 * @return {number}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.getMessageTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.setMessageTimestamp = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional RouterDispatch router_dispatch = 7;
 * @return {?proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.getRouterDispatch = function() {
  return /** @type{?proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch} */ (
    jspb.Message.getWrapperField(this, proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch, 7));
};


/** @param {?proto.com.cmx.shiroweb.chat.proto.ChatMessage.RouterDispatch|undefined} value */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.setRouterDispatch = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.clearRouterDispatch = function() {
  this.setRouterDispatch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.com.cmx.shiroweb.chat.proto.ChatMessage.prototype.hasRouterDispatch = function() {
  return jspb.Message.getField(this, 7) != null;
};


goog.object.extend(exports, proto.com.cmx.shiroweb.chat.proto);
